name: Java CI

on:
  workflow_dispatch:
  push:
    branches:
    - master
    - macos
    tags:
    - v*
  pull_request:
    branches:
    - master

env:
  GRADLE_ARGS: "-PshowPassedTests -PshowTestsOutput"

jobs:

  build-and-publish:
    strategy:
      # TODO: Move publishing into its own job so we will be able
      # to run build jobs in parallel and publishing jobs one after another
      max-parallel: 1
      matrix:
        include:
        - name: linux
          runner: ubuntu-latest
          publishing-tasks: >-
            publishToSonatype
        - name: macos
          runner: macos-latest
          publishing-tasks: >-
            -x initializeSonatypeStagingRepository
            findSonatypeStagingRepository
            publishMacosX64PublicationToSonatypeRepository
            publishMacosArm64PublicationToSonatypeRepository

    runs-on: ${{ matrix.runner }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Cache gradle wrapper
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper-

    - name: Cache kotlin native dependencies
      uses: actions/cache@v3
      with:
        path: ~/.konan
        key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-konan-

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts', 'buildSrc') }}
        restore-keys: ${{ runner.os }}-gradle-

    - name: Build
      run: |
        set -eux
        ./gradlew assemble taskTree $GRADLE_ARGS
        ./gradlew assemble $GRADLE_ARGS

    - name: Run tests
      run: |
        set -eux
        ./gradlew check taskTree $GRADLE_ARGS
        ./gradlew check $GRADLE_ARGS

    - name: Upload coverage to Codecov
      if: |
        matrix.name == 'linux' ||
        github.event_name == 'pull_request' ||
        startsWith(github.ref, 'refs/heads/master')
      uses: codecov/codecov-action@v1
      with:
        verbose: true

    - name: Prepare publishing
      if: |
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags/v')
      run: |
        set -eux
        echo '${{ secrets.SIGNING_KEY_CONTENT }}' | base64 -d > signing.gpg

    - name: Publish
      if: |
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags/v')
      run: |
        set -eux
        ./gradlew ${{ matrix.publishing-tasks }} \
          $GRADLE_ARGS \
          -Psigning.secretKeyRingFile="$PWD/signing.gpg" \
          -Psigning.keyId='${{ secrets.SIGNING_KEY_ID }}' \
          -Psigning.password='${{ secrets.SIGNING_KEY_PASSPHRASE }}' \
          -PsonatypeUser='${{ secrets.SONATYPE_USER }}' \
          -PsonatypePassword='${{ secrets.SONATYPE_PASSWORD }}'

  release:
    needs:
    - build-and-publish

    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Cache gradle wrapper
      uses: actions/cache@v3
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper-

    - name: Release
      if: |
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags/v')
      run: |
        set -eux
        ./gradlew findSonatypeStagingRepository closeAndReleaseSonatypeStagingRepository \
          $GRADLE_ARGS \
          -PsonatypeUser='${{ secrets.SONATYPE_USER }}' \
          -PsonatypePassword='${{ secrets.SONATYPE_PASSWORD }}'
